# -*- coding: utf-8 -*-
"""Copy of Syntax Dana Pensiun.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17VLHIaSarpZtImOV9rS6Tv_SQU3BNLw7

**Import Package dan Table**
"""

# Import Package
import numpy as np
import pandas as pd
import math
from datetime import datetime, timedelta
from prettytable import PrettyTable

# Import tabel
mortalita = pd.read_excel('tabel un.xlsx')
data_excel = pd.read_excel('informasi peserta.xlsx')

"""**Input Data**"""

# Input Data
row=int(input("Masukkan Nomor Baris Sampel : "))

# Menampilkan kolom yang diinginkan menggunakan iloc
job_type = data_excel.iloc[row, 1]
born_date = data_excel.iloc[row, 3]
gender = data_excel.iloc[row,2]
start_date = data_excel.iloc[row, 6]
valuation_date = data_excel.iloc[row, 4]
pension_age = data_excel.iloc[row, 5]
pension_date1 = born_date.replace(year=born_date.year + pension_age)
last_day_of_month = (pension_date1.replace(day=1) + timedelta(days=31)).replace(day=1) - timedelta(days=1)
pension_date = pension_date1.replace(day=last_day_of_month.day)
phdp = data_excel.iloc[row, 7]
interest = 0.07
skg = 0.0275
age_start = math.ceil((start_date - born_date).days / 365) #usia masuk
val_age = valuation_date.year - born_date.year - ((valuation_date.month, valuation_date.day) < (born_date.month, born_date.day)) #usia valuasi
# Menampilkan semua informasi yang telah diambil
print("Job Type:", job_type)
print("Born Date:", born_date)
print("Start Age:", age_start)
print("Valuation Age:", val_age)
print("Start Date:", start_date)
print("Gender:", gender)
print("Valuation Date:", valuation_date)
print("Pension Age:", pension_age)
print("Pension Date:", pension_date)
print("PhDP:", phdp)
print("Interest:", interest)
print("Skala Kenaikan Gaji:", skg)

"""**Valuasi Manfaat Iuran Pasti Pensiun Normal**"""

# kolom lx berdasarkan gender
if gender == 'Pria':
    lx = mortalita['lx(l)'].dropna().tolist()
elif gender == 'Wanita':
    lx = mortalita['lx(p)'].dropna().tolist()
else:
    lx = []

# fungsi gaji, iuran, diskonto, dan peluang hidup
def gaji(age_start, pension_age, phdp, skg, interest, lx):
    gaji_list = []
    iuran_list = []
    diskonto_list = []
    peluang_hidup_list = []

    # looping dari usia masuk hingga usia pensiun
    for age in range(age_start, pension_age):
        if age == age_start:
            gaji_awal = phdp
        else:
            gaji_awal *= 1 + skg

        # rumus fungsi
        iuran = 0.07 * gaji_awal + 0.13 * gaji_awal
        diskonto = (1 + interest) ** -(age - age_start)
        kpx = lx[age] / lx[age_start] if age < len(lx) else 0

        # masukkan hasil ke dalam list
        gaji_list.append(gaji_awal)
        iuran_list.append(iuran)
        diskonto_list.append(diskonto)
        peluang_hidup_list.append(kpx)

    # mengembalikan nilai
    return gaji_list, iuran_list, diskonto_list, peluang_hidup_list

# hitung nilai
gaji_list, iuran_list, diskonto_list, peluang_hidup_list = gaji(age_start, pension_age, phdp, skg, interest, lx)

# dataframe untuk output
data = {
    'Usia': list(range(age_start, pension_age)),
    'Gaji': gaji_list,
    'Iuran': iuran_list,
    'Diskonto': diskonto_list,
    'Peluang Hidup': peluang_hidup_list
}

df = pd.DataFrame(data)

# hitung PVFNC
df['PVFNC'] = (df['Iuran'] * df['Diskonto'] * df['Peluang Hidup'])-(0.00058*df['Iuran']* df['Diskonto'] * df['Peluang Hidup'])

# total PVFNC
pvfnc_sum = df['PVFNC'].sum()

# anuitas pada usia r
def anuitas(lx, interest):
    anuitas_sum = 0
    for t in range(101-pension_age):  # t from 0 to 100
        if t < len(lx):
            anuitas_sum += ((1 + interest) ** -t) * lx[pension_age+t] / lx[pension_age]
    return anuitas_sum

anuitas_value = anuitas(lx, interest)

# anuitas * diskonto * peluang hidup
pvfb = anuitas_value * ((1 + interest) ** -(pension_age - age_start)) * (lx[pension_age] / lx[age_start])

# Calculate the final result by dividing PVFNC sum by the adjusted annuity value
benefit = (pvfnc_sum / pvfb)/12

# Cetak hasil akhir dalam bentuk Rupiah
print(f"\nPembilang: Rp{pvfnc_sum:,.2f}")
print(f"Penyebut: {pvfb:,.6f}")
print(f"Hasil Akhir: Rp{benefit:,.2f}")